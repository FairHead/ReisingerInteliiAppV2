<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="ReisingerIntelliApp_V4.Components.PlacedDeviceControl"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:ReisingerIntelliApp_V4.Converters"
    xmlns:models="clr-namespace:ReisingerIntelliApp_V4.Models"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    x:Name="placedDeviceControl"
    BackgroundColor="Transparent"
    Loaded="OnControlLoaded">

    <ContentView.Resources>
        <ResourceDictionary>
            <converters:BoolToOpenCloseConverter x:Key="BoolToOpenCloseConverter" />
        </ResourceDictionary>
    </ContentView.Resources>

    <!--  Main Container - AbsoluteLayout for overlay positioning (T032 fix)  -->
    <AbsoluteLayout
        x:Name="MainContainer"
        BackgroundColor="Transparent"
        HeightRequest="400"
        HorizontalOptions="Center"
        VerticalOptions="Center"
        WidthRequest="400">

        <Grid
            x:Name="ScaleBtnGrid"
            AbsoluteLayout.LayoutBounds="0.5,0.165,200,50"
            AbsoluteLayout.LayoutFlags="PositionProportional"
            BackgroundColor="Transparent"
            ColumnDefinitions="Auto,*,Auto"
            HeightRequest="50"
            IsVisible="{Binding IsInMoveMode, Source={x:Reference placedDeviceControl}}"
            VerticalOptions="Start">

            <!--  Links  -->
            <ImageButton
                x:Name="ScalePlusDeviceButton"
                Grid.Column="0"
                Padding="10"
                BackgroundColor="Grey"
                BorderColor="{StaticResource PlacedDeviceMoveButton}"
                BorderWidth="4"
                Clicked="OnScalePlusClicked"
                CornerRadius="25"
                HeightRequest="50"
                Loaded="OnScaleButtonLoaded"
                Pressed="OnInteractivePressed"
                Released="OnInteractiveReleased"
                Source="plus.svg"
                WidthRequest="50" />

            <!--  Spacer (mittlere Spalte)  -->
            <BoxView Grid.Column="1" BackgroundColor="Transparent" />

            <!--  Rechts  -->
            <ImageButton
                x:Name="ScaleMinusDeviceButton"
                Grid.Column="2"
                Padding="10"
                BackgroundColor="Grey"
                BorderColor="{StaticResource PlacedDeviceMoveButton}"
                BorderWidth="4"
                Clicked="OnScaleMinusClicked"
                CornerRadius="25"
                HeightRequest="50"
                Loaded="OnScaleButtonLoaded"
                Pressed="OnInteractivePressed"
                Released="OnInteractiveReleased"
                Source="minus.svg"
                WidthRequest="50" />

        </Grid>



        <!--  Move Buttons Container (T032: Overlay with HaloSpacing, always above Card)  -->
        <AbsoluteLayout
            x:Name="ArrowButtonsContainer"
            AbsoluteLayout.LayoutBounds="0,0,1,1"
            AbsoluteLayout.LayoutFlags="All"
            InputTransparent="False"
            IsVisible="{Binding IsInMoveMode, Source={x:Reference placedDeviceControl}}"
            ZIndex="99">

            <ImageButton
                x:Name="NeonArrowUp"
                AbsoluteLayout.LayoutBounds="0.5,0.0,75,65"
                AbsoluteLayout.LayoutFlags="PositionProportional"
                BackgroundColor="Transparent"
                Clicked="OnMoveUpClicked"
                CommandParameter="Up"
                HeightRequest="100"
                Loaded="OnArrowLoaded"
                Pressed="OnInteractivePressed"
                Released="OnInteractiveReleased"
                Source="placementbuttonup.svg"
                Style="{StaticResource NeonArrowStyle}"
                WidthRequest="100" />



            <!--  Down Button  -->
            <ImageButton
                x:Name="NeonArrowDown"
                AbsoluteLayout.LayoutBounds="0.5,1,44,44"
                AbsoluteLayout.LayoutFlags="PositionProportional"
                BackgroundColor="Transparent"
                Clicked="OnMoveDownClicked"
                CommandParameter="Down"
                HeightRequest="100"
                Loaded="OnArrowLoaded"
                Pressed="OnInteractivePressed"
                Released="OnInteractiveReleased"
                Source="placementbuttondown.svg"
                Style="{StaticResource NeonArrowStyle}"
                WidthRequest="100" />

            <!--  Left Button  -->
            <ImageButton
                x:Name="NeonArrowLeft"
                AbsoluteLayout.LayoutBounds="0,0.5,44,40"
                AbsoluteLayout.LayoutFlags="PositionProportional"
                BackgroundColor="Transparent"
                Clicked="OnMoveLeftClicked"
                CommandParameter="Left"
                HeightRequest="100"
                Loaded="OnArrowLoaded"
                Pressed="OnInteractivePressed"
                Released="OnInteractiveReleased"
                Source="placementbuttonleft.svg"
                Style="{StaticResource NeonArrowStyle}"
                WidthRequest="100" />
            <!--  Right Button  -->
            <ImageButton
                x:Name="NeonArrowRight"
                AbsoluteLayout.LayoutBounds="1,0.5,44,44"
                AbsoluteLayout.LayoutFlags="PositionProportional"
                BackgroundColor="Transparent"
                Clicked="OnMoveRightClicked"
                CommandParameter="Right"
                HeightRequest="100"
                Loaded="OnArrowLoaded"
                Pressed="OnInteractivePressed"
                Released="OnInteractiveReleased"
                Source="placementbuttonright.svg"
                Style="{StaticResource NeonArrowStyle}"
                WidthRequest="100" />

        </AbsoluteLayout>



        <!--  Glow Layer: größer als MainCard, fast transparent, für sichtbaren Neon-Schimmer  -->
        <Border
            AbsoluteLayout.LayoutBounds="73,118,154,84"
            AbsoluteLayout.LayoutFlags="None"
            BackgroundColor="Transparent"
            InputTransparent="True"
            ZIndex="-1" />

        <!--  Feature Card (Main Device Info) - Centered in 400x400 container  -->
        <Border
            AbsoluteLayout.LayoutBounds="100,120,200,300"
            AbsoluteLayout.LayoutFlags="None"
            Background="{StaticResource PlacedDeviceAddButton}"
            HeightRequest="300"
            Stroke="{StaticResource PlacedDeviceMoveButton}"
            StrokeThickness="3"
            WidthRequest="250"
            ZIndex="0">
            <Border.StrokeShape>
                <RoundRectangle CornerRadius="16" />
            </Border.StrokeShape>
            <Border.Shadow>
                <Shadow
                    Brush="#00BFFF"
                    Opacity="0.85"
                    Radius="22"
                    Offset="0,0" />
            </Border.Shadow>

            <!-- Wrap the original card grid and the dropdown in a vertical stack so the dropdown appears below the buttons -->
            <VerticalStackLayout Spacing="8">
            <Grid InputTransparent="False" RowDefinitions="Auto,*,*,Auto">

                <!--  Device Info Container (Top)  -->
                <StackLayout
                    Grid.Row="0"
                    Margin="0,9,0,0"
                    HorizontalOptions="Center"
                    Spacing="4"
                    VerticalOptions="Start">

                    <!--  Device Name  -->
                    <Label
                        FontFamily="SpaceMonoBold"
                        FontSize="25"
                        HorizontalOptions="Center"
                        LineBreakMode="WordWrap"
                        MaxLines="1"
                        Text="{Binding Name}"
                        TextColor="{StaticResource PlacedDeviceText}"
                        TextDecorations="Underline" />

                    <!--  Network info: show SSID for WiFi devices, otherwise IP address  -->
                    <Label
                        FontFamily="SpaceMonoRegular"
                        FontSize="10"
                        HorizontalOptions="Center"
                        LineBreakMode="TailTruncation"
                        MaxLines="1"
                        Text="{Binding NetworkInfo}"
                        TextColor="{StaticResource PlacedDeviceTextSecondary}"
                        TextDecorations="Underline" />
                </StackLayout>

                <!--  Spacer for center area  -->
                <BoxView Grid.Row="1" BackgroundColor="Transparent" />

                <!--  Button Row at Bottom  -->
                <Grid
                    Grid.Row="1"
                    Margin="0,60,0,0"
                    ColumnDefinitions="Auto,Auto,Auto"
                    HorizontalOptions="Center"
                    RowDefinitions="Auto,Auto,Auto"
                    VerticalOptions="CenterAndExpand">



                    <!--  Delete Device Button (Left)  -->
                    <ImageButton
                        Grid.Row="2"
                        Grid.RowSpan="1"
                        Grid.Column="2"
                        Margin="5,60,0,0"
                        Aspect="Center"
                        BackgroundColor="{StaticResource PlacedDeviceDeleteButton}"
                        BorderColor="{StaticResource PlacedDeviceMoveButton}"
                        BorderWidth="2"
                        Clicked="OnDeleteDeviceClicked"
                        CornerRadius="22"
                        HorizontalOptions="Center"
                        MinimumHeightRequest="45"
                        MinimumWidthRequest="45"
                        Source="bin.svg"
                        VerticalOptions="Center" />

                    <!--  Large Open/Close Button (Center)  -->
                    <Border
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Margin="1"
                        BackgroundColor="Transparent"
                        Stroke="{StaticResource Primary}"
                        StrokeThickness="6">



                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="55" />
                        </Border.StrokeShape>

                        <ImageButton
                            Padding="10"
                            BackgroundColor="Green"
                            BorderColor="{StaticResource PlacedDeviceMoveButton}"
                            BorderWidth="5"
                            Clicked="OnToggleDoorClicked"
                            CornerRadius="50"
                            HeightRequest="110"
                            HorizontalOptions="Center"
                            Pressed="OnInteractivePressed"
                            Released="OnInteractiveReleased"
                            VerticalOptions="Center"
                            WidthRequest="110">
                            <ImageButton.Source>
                                <FontImageSource
                                    FontFamily="SpaceMonoBold"
                                    Glyph="{Binding IsDoorOpen, Converter={StaticResource BoolToOpenCloseConverter}}"
                                    Size="14"
                                    Color="Black" />
                            </ImageButton.Source>
                        </ImageButton>
                    </Border>


                    <!--  Move Device Button (Right)  -->
                    <ImageButton
                        x:Name="DevicePlacementModeBtn"
                        Grid.Row="2"
                        Grid.Column="0"
                        Margin="0,60,5,0"
                        Aspect="Center"
                        Clicked="OnMoveDeviceClicked"
                        CornerRadius="22"
                        HorizontalOptions="Center"
                        InputTransparent="False"
                        IsEnabled="True"
                        Loaded="OnArrowLoaded"
                        MinimumHeightRequest="45"
                        MinimumWidthRequest="45"
                        Pressed="OnInteractivePressed"
                        Released="OnInteractiveReleased"
                        Source="move.svg"
                        VerticalOptions="Center">
                        <!--  VisualState wird im Code-Behind per VisualStateManager.GoToState gesetzt  -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="PlacementModeStates">
                                <VisualState Name="Active">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor" Value="{StaticResource PlacedDeviceConfigButton}" />
                                        <Setter Property="BorderColor" Value="{StaticResource PlacedDeviceActiveBorder}" />
                                        <Setter Property="BorderWidth" Value="4" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="Inactive">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor" Value="{StaticResource PlacedDeviceMoveButton}" />
                                        <Setter Property="BorderColor" Value="{StaticResource PlacedDeviceConfigButton}" />
                                        <Setter Property="BorderWidth" Value="2" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ImageButton>
                </Grid>
            </Grid>
            <!--  Device Modes Dropdown (Toolkit Expander) - below buttons -->
            <toolkit:Expander x:Name="DeviceModesExpander" Margin="0,0,0,0" IsExpanded="True">
                <toolkit:Expander.Header>
                    <Grid ColumnDefinitions="Auto, *" Padding="8,4">
                        <Image Source="settings.svg" WidthRequest="18" HeightRequest="18" />
                        <Label Grid.Column="1" Text="Modi" FontFamily="SpaceMonoBold" FontSize="12" VerticalOptions="Center" />
                    </Grid>
                </toolkit:Expander.Header>
                <toolkit:Expander.Content>
                    <Grid Padding="8" RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="*">
                        <!-- 1. Dauerauf -->
                        <Button Text="Dauerauf" Margin="0,4" Clicked="OnToggleDauerAufClicked" BackgroundColor="{Binding DauerAuf, Converter={StaticResource BoolToColorConverter}}" />
                        <!-- 2. Lock -->
                        <Button Text="Lock/Unlock" Margin="0,4" Clicked="OnToggleLockClicked" BackgroundColor="{Binding IsLocked, Converter={StaticResource BoolToColorConverter}}" />
                        <!-- 3. Einbahn -->
                        <Button Text="Einbahn" Margin="0,4" Clicked="OnToggleOneWayClicked" BackgroundColor="{Binding IsOneWay, Converter={StaticResource BoolToColorConverter}}" />
                        <!-- 4. Automatik (halb/ganz) -->
                        <Grid ColumnDefinitions="*,*" Margin="0,4">
                            <Button Text="Auto Halb" Grid.Column="0" Clicked="OnSetAutoModeHalfClicked">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger TargetType="Button" Binding="{Binding AutoMode}" Value="{x:Static Member=models:PlacedDeviceModel+AutoModeLevel.Half}">
                                                <Setter Property="BackgroundColor" Value="{StaticResource PlacedDeviceConfigButton}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Text="Auto Ganz" Grid.Column="1" Clicked="OnSetAutoModeFullClicked">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger TargetType="Button" Binding="{Binding AutoMode}" Value="{x:Static Member=models:PlacedDeviceModel+AutoModeLevel.Full}">
                                                <Setter Property="BackgroundColor" Value="{StaticResource PlacedDeviceConfigButton}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        <!-- 5. Winter -->
                        <Button Text="Winter" Margin="0,4" Clicked="OnToggleWinterClicked" BackgroundColor="{Binding IsWinterMode, Converter={StaticResource BoolToColorConverter}}" />
                    </Grid>
                </toolkit:Expander.Content>
            </toolkit:Expander>
            </VerticalStackLayout>
        </Border>
    </AbsoluteLayout>
</ContentView>
