<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="ReisingerIntelliApp_V4.Views.MainPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:components="clr-namespace:ReisingerIntelliApp_V4.Components"
    xmlns:controls="clr-namespace:ReisingerIntelliApp_V4.Controls"
    xmlns:viewmodels="clr-namespace:ReisingerIntelliApp_V4.ViewModels"
    x:Name="Root"
    BackgroundColor="#1E1E1E"
    Shell.NavBarIsVisible="False">

    <!--  Remove BindingContext - will be set in code-behind  -->

    <Grid RowDefinitions="Auto,Auto,*,Auto">
        <!--  Background Logo - placed first so it's behind everything  -->
        <components:BackgroundLogo Grid.RowSpan="4" />

        <!--  Header Component  -->
        <components:AppHeader
            Title="{Binding Title}"
            Grid.Row="0"
            FontSize="20"
            TitleColor="White"
            ZIndex="2" />

        <!--  Tab Bar  -->
        <Border
            Grid.Row="1"
            Padding="10,0"
            BackgroundColor="Transparent"
            StrokeThickness="0"
            ZIndex="2">

            <Grid ColumnDefinitions="*,*,*,*">
                <Border
                    x:Name="StructuresTabBackground"
                    Grid.Column="0"
                    Padding="5,5"
                    BackgroundColor="Transparent"
                    StrokeShape="RoundRectangle 8"
                    StrokeThickness="0">
                    <StackLayout x:Name="StructuresTab" Spacing="0">
                        <Label
                            x:Name="StructuresLabel"
                            Style="{StaticResource TabLabel}"
                            Text="Structures">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding TabTappedCommand}" CommandParameter="Structures" />
                            </Label.GestureRecognizers>
                        </Label>
                        <Border
                            x:Name="StructuresUnderline"
                            BackgroundColor="Transparent"
                            HeightRequest="3"
                            StrokeShape="RoundRectangle 2"
                            StrokeThickness="0" />
                    </StackLayout>
                </Border>

                <Border
                    x:Name="LevelsTabBackground"
                    Grid.Column="1"
                    Padding="5,5"
                    BackgroundColor="Transparent"
                    StrokeShape="RoundRectangle 8"
                    StrokeThickness="0">
                    <StackLayout x:Name="LevelsTab" Spacing="0">
                        <Label
                            x:Name="LevelsLabel"
                            Style="{StaticResource TabLabel}"
                            Text="Levels">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding TabTappedCommand}" CommandParameter="Levels" />
                            </Label.GestureRecognizers>
                        </Label>
                        <Border
                            x:Name="LevelsUnderline"
                            BackgroundColor="Transparent"
                            HeightRequest="3"
                            StrokeShape="RoundRectangle 2"
                            StrokeThickness="0" />
                    </StackLayout>
                </Border>

                <Border
                    x:Name="WifiDevTabBackground"
                    Grid.Column="2"
                    Padding="5,5"
                    BackgroundColor="Transparent"
                    StrokeShape="RoundRectangle 8"
                    StrokeThickness="0">
                    <StackLayout x:Name="WifiDevTab" Spacing="0">
                        <Label
                            x:Name="WifiDevLabel"
                            Style="{StaticResource TabLabel}"
                            Text="WifiDev">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding TabTappedCommand}" CommandParameter="WifiDev" />
                            </Label.GestureRecognizers>
                        </Label>
                        <Border
                            x:Name="WifiDevUnderline"
                            BackgroundColor="Transparent"
                            HeightRequest="3"
                            StrokeShape="RoundRectangle 2"
                            StrokeThickness="0" />
                    </StackLayout>
                </Border>

                <Border
                    x:Name="LocalDevTabBackground"
                    Grid.Column="3"
                    Padding="5,5"
                    BackgroundColor="Transparent"
                    StrokeShape="RoundRectangle 8"
                    StrokeThickness="0">
                    <StackLayout x:Name="LocalDevTab" Spacing="0">
                        <Label
                            x:Name="LocalDevLabel"
                            Style="{StaticResource TabLabel}"
                            Text="LocalDev">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding TabTappedCommand}" CommandParameter="LocalDev" />
                            </Label.GestureRecognizers>
                        </Label>
                        <Border
                            x:Name="LocalDevUnderline"
                            BackgroundColor="Transparent"
                            HeightRequest="3"
                            StrokeShape="RoundRectangle 2"
                            StrokeThickness="0" />
                    </StackLayout>
                </Border>
            </Grid>
        </Border>

        <!--  Main Content Area with Dropdown and Floorplan viewer  -->
        <Grid
            Grid.Row="2"
            BackgroundColor="Transparent"
            IsClippedToBounds="True">
            <Grid.GestureRecognizers>
                <TapGestureRecognizer Tapped="OnBackgroundTapped" />
            </Grid.GestureRecognizers>

            <!--  Floorplan display host - moved before dropdown so dropdown is on top  -->
            <Grid
                x:Name="PlanHost"
                HorizontalOptions="FillAndExpand"
                InputTransparent="False"
                IsClippedToBounds="True"
                IsVisible="True"
                RowDefinitions="*"
                VerticalOptions="FillAndExpand"
                ZIndex="1">
                <!--  Placeholder when no plan  -->
                <Label
                    HorizontalOptions="Center"
                    Text="No floor plan available"
                    TextColor="#B0B0B0"
                    VerticalOptions="Center">
                    <Label.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference Root}, Path=BindingContext.StructuresVM.HasPlan}"
                            TargetType="Label"
                            Value="True">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>

                <!--  PNG fallback viewer with pinch/zoom using PanPinchContainer  -->
                <controls:PanPinchContainer
                    x:Name="PlanContainer"
                    HorizontalOptions="Fill"
                    VerticalOptions="Fill">
                    <Grid>
                        <!--  Floor plan image  -->
                        <Image x:Name="PlanImage" Aspect="AspectFit">
                            <Image.Triggers>
                                <DataTrigger
                                    Binding="{Binding Source={x:Reference Root}, Path=BindingContext.StructuresVM.UsePdfViewer}"
                                    TargetType="Image"
                                    Value="True">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding Source={x:Reference Root}, Path=BindingContext.StructuresVM.CurrentPngPath}"
                                    TargetType="Image"
                                    Value="{x:Null}">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Image.Triggers>
                            <Image.Source>
                                <Binding Path="BindingContext.StructuresVM.CurrentPngPath" Source="{x:Reference Root}" />
                            </Image.Source>
                        </Image>

                        <!--  Devices overlay - BACK INSIDE PanPinchContainer for proper zoom/pan behavior  -->
                        <!--  HIGHEST Z-INDEX to ensure devices are always clickable  -->
                        <AbsoluteLayout
                            x:Name="DevicesOverlay"
                            AbsoluteLayout.LayoutBounds="0,0,280,280"
                            AbsoluteLayout.LayoutFlags="None"
                            BindableLayout.ItemsSource="{Binding Source={x:Reference Root}, Path=BindingContext.StructuresVM.SelectedLevel.PlacedDevices}"
                            InputTransparent="False"
                            IsEnabled="True"
                            ZIndex="1000">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <components:PlacedDeviceControl
                                        HorizontalOptions="Center"
                                        VerticalOptions="Center" />
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </AbsoluteLayout>
                    </Grid>
                </controls:PanPinchContainer>

                <!--  PDF viewer placeholder; bind to CurrentPdfPath. Replace with an actual PDF control if added.  -->
                <ContentView x:Name="PdfViewerHost">
                    <ContentView.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference Root}, Path=BindingContext.StructuresVM.UsePdfViewer}"
                            TargetType="ContentView"
                            Value="False">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Source={x:Reference Root}, Path=BindingContext.StructuresVM.CurrentPdfPath}"
                            TargetType="ContentView"
                            Value="{x:Null}">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </ContentView.Triggers>
                    <VerticalStackLayout
                        HorizontalOptions="CenterAndExpand"
                        Spacing="6"
                        VerticalOptions="CenterAndExpand">
                        <Image
                            HeightRequest="48"
                            Source="pdf_icon.svg"
                            WidthRequest="48" />
                        <Label Text="PDF viewer not installed. Showing placeholder." TextColor="#B0B0B0" />
                        <Label
                            FontSize="10"
                            Text="{Binding Source={x:Reference Root}, Path=BindingContext.StructuresVM.CurrentPdfPath}"
                            TextColor="#808080" />
                    </VerticalStackLayout>
                </ContentView>
            </Grid>

            <!--  Dropdown content grid - moved after plan so it overlays properly  -->
            <Grid
                x:Name="DropdownContainer"
                Padding="10"
                HorizontalOptions="Fill"
                IsVisible="{Binding IsDropdownVisible}"
                RowDefinitions="Auto,*,Auto"
                ZIndex="100">
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Tapped="OnDropdownContentTapped" />
                </Grid.GestureRecognizers>
                <Border Margin="0,0,0,0" StrokeThickness="0">
                    <Label
                        x:Name="DropdownTitle"
                        Grid.Row="0"
                        Padding="5"
                        Background="{StaticResource PlacedDeviceAddButton}"
                        FontAttributes="Bold"
                        FontSize="24"
                        Text="{Binding DropdownTitle}"
                        TextColor="White" />
                </Border>
                <CollectionView
                    x:Name="DropdownItemsView"
                    Grid.Row="1"
                    HorizontalOptions="FillAndExpand"
                    ItemsSource="{Binding DropdownItems}"
                    SelectionChanged="OnDropdownItemSelected"
                    SelectionMode="Single"
                    VerticalOptions="FillAndExpand">
                    <CollectionView.ItemsLayout>
                        <GridItemsLayout
                            HorizontalItemSpacing="10"
                            Orientation="Vertical"
                            Span="2"
                            VerticalItemSpacing="10" />
                    </CollectionView.ItemsLayout>
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Border
                                Margin="0,5,0,0"
                                Padding="15"
                                BackgroundColor="#2A2A2A"
                                HorizontalOptions="Start"
                                Stroke="{Binding IsSelected, Converter={StaticResource BoolToColorConverter}}"
                                StrokeShape="RoundRectangle 8"
                                StrokeThickness="{Binding IsSelected, Converter={StaticResource BoolToThicknessConverter}}"
                                VerticalOptions="Center"
                                WidthRequest="175">
                                <Grid RowDefinitions="Auto,*,Auto">
                                    <!--  Icon  -->
                                    <Image
                                        Grid.Row="0"
                                        Margin="0,0,0,10"
                                        HeightRequest="24"
                                        HorizontalOptions="Center"
                                        Source="{Binding Icon}"
                                        VerticalOptions="Center"
                                        WidthRequest="24" />

                                    <!--  Text  -->
                                    <StackLayout Grid.Row="1" Spacing="5">
                                        <Label
                                            FontSize="10"
                                            LineBreakMode="WordWrap"
                                            Text="{Binding Text, StringFormat='Name: {0}'}"
                                            TextColor="White" />

                                        <!--  Already placed hint  -->
                                        <Label
                                            FontSize="10"
                                            IsVisible="{Binding IsPlacedOnCurrentFloor}"
                                            Text="Already placed on this floor"
                                            TextColor="#B0B0B0" />

                                        <!--  Connection Status (only for device tabs; hidden for Structures/Levels)  -->
                                        <StackLayout
                                            HorizontalOptions="Center"
                                            IsVisible="{Binding ShowStatus}"
                                            Orientation="Horizontal"
                                            Spacing="8">
                                            <!--  Status Indicator Dot  -->
                                            <Ellipse
                                                Fill="{Binding ConnectionColor}"
                                                HeightRequest="12"
                                                WidthRequest="12" />
                                            <!--  Status Text  -->
                                            <Label
                                                FontSize="12"
                                                Text="{Binding ConnectionStatus}"
                                                TextColor="{Binding ConnectionColor}"
                                                VerticalOptions="Center" />
                                        </StackLayout>
                                    </StackLayout>

                                    <!--  Action Buttons (if HasActions is true)  -->
                                    <HorizontalStackLayout
                                        Grid.Row="2"
                                        Margin="0,12,0,0"
                                        HorizontalOptions="Center"
                                        IsVisible="{Binding HasActions}"
                                        Spacing="15">

                                        <!--  Add to Floor Plan Button (only for devices)  -->
                                        <ImageButton
                                            Padding="0"
                                            BackgroundColor="Transparent"
                                            Command="{Binding Source={x:Reference DropdownItemsView}, Path=BindingContext.AddDeviceToFloorPlanCommand}"
                                            CommandParameter="{Binding .}"
                                            HeightRequest="32"
                                            IsEnabled="{Binding IsActionEnabled}"
                                            Source="add_to_floorplan.svg"
                                            WidthRequest="32">
                                            <ImageButton.Triggers>
                                                <!--  Hide for Structures and Levels tabs  -->
                                                <DataTrigger
                                                    Binding="{Binding Source={x:Reference DropdownItemsView}, Path=BindingContext.CurrentActiveTab}"
                                                    TargetType="ImageButton"
                                                    Value="Structures">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding Source={x:Reference DropdownItemsView}, Path=BindingContext.CurrentActiveTab}"
                                                    TargetType="ImageButton"
                                                    Value="Levels">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>
                                            </ImageButton.Triggers>
                                        </ImageButton>

                                        <!--  Configure/Edit Button (only for devices and buildings)  -->
                                        <ImageButton
                                            Padding="0"
                                            BackgroundColor="Transparent"
                                            Command="{Binding Source={x:Reference DropdownItemsView}, Path=BindingContext.ShowDeviceOptionsCommand}"
                                            CommandParameter="{Binding .}"
                                            HeightRequest="32"
                                            Source="configuredevicebutton.svg"
                                            WidthRequest="32">
                                            <ImageButton.Triggers>
                                                <!--  Hide for Levels tab as floors are edited through building editor  -->
                                                <DataTrigger
                                                    Binding="{Binding Source={x:Reference DropdownItemsView}, Path=BindingContext.CurrentActiveTab}"
                                                    TargetType="ImageButton"
                                                    Value="Levels">
                                                    <Setter Property="IsVisible" Value="False" />
                                                </DataTrigger>
                                            </ImageButton.Triggers>
                                        </ImageButton>

                                        <!--  Delete Button (for all items with actions)  -->
                                        <ImageButton
                                            x:Name="deleteButton"
                                            Padding="0"
                                            BackgroundColor="Transparent"
                                            Command="{Binding Source={x:Reference DropdownItemsView}, Path=BindingContext.DeleteDeviceFromDropdownCommand}"
                                            CommandParameter="{Binding .}"
                                            HeightRequest="32"
                                            Source="bin.svg"
                                            WidthRequest="32" />
                                    </HorizontalStackLayout>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <!--  Scan button at bottom of dropdown  -->
                <Border
                    Grid.Row="2"
                    Margin="0,20,0,0"
                    Padding="20,15"
                    BackgroundColor="#007AFF"
                    HorizontalOptions="Center"
                    InputTransparent="False"
                    IsVisible="{Binding ShowScanButton}"
                    StrokeShape="RoundRectangle 25"
                    ZIndex="1">
                    <Border.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ScanButtonTappedCommand}" />
                    </Border.GestureRecognizers>
                    <Label
                        FontAttributes="Bold"
                        FontSize="14"
                        HorizontalOptions="Center"
                        Text="{Binding ScanButtonText}"
                        TextColor="White"
                        VerticalOptions="Center" />
                </Border>
            </Grid>
        </Grid>

        <!--  Footer Component  -->
        <components:AppFooter x:Name="Footer" Grid.Row="3" />
        
    </Grid>


</ContentPage>
